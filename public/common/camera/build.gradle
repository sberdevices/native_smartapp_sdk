plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion versions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles "${project.rootDir}/../../common-proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':public:common:logger')
    implementation project(':public:services:mic_camera_state:api')

    implementation "androidx.annotation:annotation:$versions.annotation"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinxCoroutines"

    testImplementation "androidx.test:core:$versions.androidxtest"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "junit:junit:$versions.junit"
    testImplementation "io.mockk:mockk:$versions.mockk"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.kotlinxCoroutines"
    testImplementation "org.json:json:20180813"

    androidTestImplementation "androidx.appcompat:appcompat:1.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.2"
    androidTestImplementation "androidx.test:core:$versions.androidxtest"
    androidTestImplementation "androidx.test:rules:$versions.androidxtest"
    androidTestImplementation "androidx.test:runner:$versions.androidxtest"
    androidTestImplementation "junit:junit:$versions.junit"

}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}

afterEvaluate {
    publishing {
        repositories.add(rootProject.repositories.getByName('OSSRH'))

        publications {
            mavenCommonCamera(MavenPublication) {
                from components.release

                artifact androidSourcesJar

                groupId publication.pomGroupID
                artifactId project.name
                version publication.pomCameraUtilLibVersion

                pom {
                    name = "common:camera"
                    description = 'utility for camera usage'
                    url = publication.githubUrl
                    licenses {
                        license {
                            name = publication.licenseName
                            url = publication.licenseUrl
                        }
                    }
                    developers {
                        developer {
                            name = 'Dmitry Levshunov'
                            email = 'Levshunov.D.A@sberbank.ru'
                        }
                        developer {
                            name = 'Irina Karpenko'
                            email = 'IViKarpenko@sberbank.ru'
                        }
                    }
                    scm {
                        connection = publication.connectionUrl
                        developerConnection = publication.connectionUrl
                        url = publication.githubUrl
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenCommonCamera
    }
}
